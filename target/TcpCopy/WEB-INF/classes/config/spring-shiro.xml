<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.glodon"/>

    <bean id="casPropertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:config/cas.properties" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="fileEncoding" value="UTF-8"/>
    </bean>

    <bean id="casRealm" class="com.glodon.security.realm.GlodonCasRealm">
        <property name="defaultRoles" value="ROLE_USER"/>
        <property name="casServerUrlPrefix" value="${casServerUrlPrefix}"/>
        <property name="casService" value="${casService}"/>
    </bean>

    <bean id="casFilter" class="org.apache.shiro.cas.CasFilter"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口，这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="${casLogin}?service=${returnUrl}"/>
        <property name="successUrl" value="${successUrl}"/>
        <!-- 用户访问未对其授权的资源时，所显示的连接 但是使用注解的话这段不起作用，需要使用异常处理器重定向页面-->
        <property name="unauthorizedUrl" value="${unauthorizedUrl}"/>
        <property name="filterChainDefinitions">
            <value>
                /anon=anon
                /cas=cas
                <!--首页-->
                /=anon
                <!--登录-->
                /login=anon
                <!--注销-->
                /logout=logoutFilter

                /application/**=user
                /server/**=anon


                <!--后台管理-->
                /admin/**=authc[ROLE_ADMIN]

                <!--静态资源-->
                /resources/**=anon
                /favicon.ico=anon
                <!--错误页-->
                /error/**=anon
                <!--静态页-->
                /pages/**=anon

                /**=authc[ROLE_NONE]
            </value>
        </property>
        <property name="filters">
            <map>
                <entry key="logoutFilter">
                    <bean class="org.apache.shiro.web.filter.authc.LogoutFilter">
                        <property name="redirectUrl" value="${logoutUrl}"/>
                    </bean>
                </entry>
                <entry key="cas" value-ref="casFilter"/>
            </map>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!--<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">-->
    <!--<property name="redirectUrl" value="/"/>-->
    <!--</bean>-->
    <!-- Shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="sessionManager" ref="sessionManager"/>

        <!--<property name="sessionMode" value="native"/>-->
        <property name="cacheManager" ref="cacheManager"/>
        <property name="realm" ref="casRealm"/>

    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"/>
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>
    <bean id="authenticationStrategy" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy"/>

    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>
    <!--
       开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，
       并在必要时进行安全逻辑验证
    -->
    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 启用shiro 注解 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>